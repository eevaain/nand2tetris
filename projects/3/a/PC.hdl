// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], inc, load, reset;
    OUT out[16];
    
    PARTS:
    //// use chips from chapter 2, 

    // set counter to address of "n" and then have it keep incrementing (implementation for jmp to execute instruction n)
    // feedback is zero at the start

    // Inc Bit (recall hdl code is not sequential!!!)
    // All this does is increment a bit or keep it the same
    // "loop" is a wire which connects input and output together
    Inc16(in=loop, out=outInc);
    Mux16(a=loop, b=outInc, sel=inc, out=outMux1);

    // Load Bit
    // b=in is the counting base
    // when sel = 1 then, loop = new counting base, if sel = 0 then counting base stays the same!
    Mux16(a=outMux1, b=in, sel=load, out=outMux2);

    // if sel = 1 then program counter will go back to zero
    Mux16(a=outMux2, b=false, sel=reset, out=outReset);
    Register(in=outReset, load=true, out=out, out=loop);
    


    

    

}
